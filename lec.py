

#     Задача 1. Напишите программу, которая принимает на вход цифру, обозначающую день недели, и проверяет, является ли этот день выходным.

#     Пример:

# - 6 -> да
# - 7 -> да
# - 1 -> нет

# a = int (input('Введите цифру, обозначающую день недели от 1 до 7:  '))
# if a ==6 or a == 7:
#     print (f'{a} -> УРА!!! ВЫХОДНОЙ:) ')
# elif a > 0 & a < 6:
#     print (f'{a} -> Будний день:(')




#     Задача 2. Напишите программу для. проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.

#     Задача 3. Напишите программу, которая принимает на вход координаты точки (X и Y), причём X ≠ 0 и Y ≠ 0 
#   и выдаёт номер четверти плоскости, в которой находится эта точка (или на какой оси она находится).
#     Пример:
# - x=34; y=-30 -> 4
# - x=2; y=4-> 1
# - x=-34; y=-30 -> 3
x = float (input('Введите координату X точки А:    '))
y = float (input('Введите координату Y точки А:    '))
if x>0 and y>0:
    print (f'x={x}; y={y} -> 1 четверть')
elif x<0 and y>0:
    print (f'x={x}; y={y} -> 2 четверть')
elif x<0 and y<0:
    print (f'x={x}; y={y} -> 3 четверть')
else:
    print (f'x={x}; y={y} -> 4 четрверть')
# a1 = float (input('Введите координату X2 точки B:   '))
# b1 = float (input('Введите координату Y2 точки B:   '))
# import math
# d = math.sqrt ((a1-a)**2 + (b1-b)**2)
# d = round (d,2)
# print (f'A({a},{b}); B({a1},{b1}) -> {d}')

#     Задача 4. Напишите программу, которая по заданному номеру четверти, показывает диапазон возможных координат точек 
#   в этой четверти (x и y).

#     Задача 5. Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними в 
#   2D пространстве.

#     Пример:

# - A (3,6); B (2,1) -> 5,09
# - A (7,-5); B (1,-1) -> 7,21

# a = float (input('Введите координату X1 точки А:    '))
# b = float (input('Введите координату Y1 точки А:    '))
# a1 = float (input('Введите координату X2 точки B:   '))
# b1 = float (input('Введите координату Y2 точки B:   '))
# import math
# d = math.sqrt ((a1-a)**2 + (b1-b)**2)
# d = round (d,2)
# print (f'A({a},{b}); B({a1},{b1}) -> {d}') 